/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import classes.*;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import java.lang.String;

/**
 *
 * @author geo
 */
public class mainForm extends javax.swing.JFrame {

    private MyCanvas cv = new MyCanvas();

    /**
     * Creates new form mainForm
     */
    public mainForm() {
        initComponents();
        this.add(cv);
        //cv.setBackground(Color.GRAY);
        cv.GenerateCoordinates(20);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        menuMap = new javax.swing.JMenu();
        menuItemRegenerateMap = new javax.swing.JMenuItem();
        menuItemRegenerateMapWithNCooridinates = new javax.swing.JMenuItem();
        menuLocations = new javax.swing.JMenu();
        menuItemHighlightNearestLocations = new javax.swing.JMenuItem();
        menuItemFindShortestRouteBetween = new javax.swing.JMenuItem();
        menuExit = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        menuMap.setText("Maps");
        menuMap.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                menuMapMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                menuMapMouseReleased(evt);
            }
        });

        menuItemRegenerateMap.setText("Regenerate Map");
        menuItemRegenerateMap.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                menuItemRegenerateMapMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                menuItemRegenerateMapMouseReleased(evt);
            }
        });
        menuMap.add(menuItemRegenerateMap);

        menuItemRegenerateMapWithNCooridinates.setText("Regenerate Map with n coordinates...");
        menuItemRegenerateMapWithNCooridinates.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                menuItemRegenerateMapWithNCooridinatesMousePressed(evt);
            }
        });
        menuMap.add(menuItemRegenerateMapWithNCooridinates);

        jMenuBar1.add(menuMap);

        menuLocations.setText("Locations");

        menuItemHighlightNearestLocations.setText("Highlight nearest locations for...");
        menuItemHighlightNearestLocations.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                menuItemHighlightNearestLocationsMousePressed(evt);
            }
        });
        menuLocations.add(menuItemHighlightNearestLocations);

        menuItemFindShortestRouteBetween.setText("Find shortest route between...");
        menuItemFindShortestRouteBetween.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                menuItemFindShortestRouteBetweenMousePressed(evt);
            }
        });
        menuLocations.add(menuItemFindShortestRouteBetween);

        jMenuBar1.add(menuLocations);

        menuExit.setText("Exit");
        menuExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                menuExitMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                menuExitMouseReleased(evt);
            }
        });
        jMenuBar1.add(menuExit);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 669, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 389, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        // TODO add your handling code here:
        cv.setBounds(this.getBounds());
    }//GEN-LAST:event_formComponentResized

    private void menuMapMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuMapMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuMapMousePressed

    private void menuMapMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuMapMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_menuMapMouseReleased

    private void menuExitMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuExitMouseReleased
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_menuExitMouseReleased

    private void menuExitMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuExitMousePressed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_menuExitMousePressed

    private void menuItemRegenerateMapMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuItemRegenerateMapMouseReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_menuItemRegenerateMapMouseReleased

    private void menuItemRegenerateMapMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuItemRegenerateMapMousePressed
        // TODO add your handling code here:
        System.out.println("Renegenerate mouse pressed");
        this.remove(cv);
        cv = new MyCanvas();
        cv.setBounds(this.getBounds());

        this.add(cv);
        //cv.setBackground(Color.GRAY);
        cv.GenerateCoordinates(20);
        //cv.repaint();

    }//GEN-LAST:event_menuItemRegenerateMapMousePressed

    private void menuItemRegenerateMapWithNCooridinatesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuItemRegenerateMapWithNCooridinatesMousePressed
        // TODO add your handling code here:
        System.out.println("Renegenerate n coordinates mouse pressed");
        int size = Integer.parseInt(JOptionPane.showInputDialog("Enter number of coordinates", 20));

        this.remove(cv);
        cv = new MyCanvas();
        cv.setBounds(this.getBounds());

        this.add(cv);
        //cv.setBackground(Color.GRAY);
        cv.GenerateCoordinates(size);

    }//GEN-LAST:event_menuItemRegenerateMapWithNCooridinatesMousePressed

    private void menuItemHighlightNearestLocationsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuItemHighlightNearestLocationsMousePressed
        JOptionPane p = new JOptionPane("Message", JOptionPane.QUESTION_MESSAGE, JOptionPane.OK_CANCEL_OPTION);

        ArrayList<String> ln = new ArrayList<String>();

        for (Coordinate e : cv.getLocations()) {
            ln.add(e.getName());
        }
        p.setSelectionValues(ln.toArray());
        p.setInitialSelectionValue(ln.get(0));
        //System.out.println(p.createDialog("Chocie").);
        String[] choices = ln.toArray(new String[0]);
        String input = (String) JOptionPane.showInputDialog(this, "Select a location from below",
                "List of locations", JOptionPane.QUESTION_MESSAGE, null, // Use
                // default
                // icon
                choices, // Array of choices
                choices[0]);
        System.out.println(input);
        cv.SetNeighbourFromName(input);
    }//GEN-LAST:event_menuItemHighlightNearestLocationsMousePressed

    private void menuItemFindShortestRouteBetweenMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuItemFindShortestRouteBetweenMousePressed
        // TODO add your handling code here:
        JOptionPane p = new JOptionPane("Message", JOptionPane.QUESTION_MESSAGE, JOptionPane.OK_CANCEL_OPTION);

        ArrayList<String> ln = new ArrayList<String>();

        for (Coordinate e : cv.getLocations()) {
            ln.add(e.getName());
        }
        p.setSelectionValues(ln.toArray());
        p.setInitialSelectionValue(ln.get(0));
        //System.out.println(p.createDialog("Chocie").);
        String[] choices = ln.toArray(new String[0]);
        String a = (String) JOptionPane.showInputDialog(this, "Select a starting location from below",
                "List of locations", JOptionPane.QUESTION_MESSAGE, null, // Use
                // default
                // icon
                choices, // Array of choices
                choices[0]);
        
        p = new JOptionPane("Message", JOptionPane.QUESTION_MESSAGE, JOptionPane.OK_CANCEL_OPTION);

        ln = new ArrayList<String>();

        for (Coordinate e : cv.getLocations()) {
            ln.add(e.getName());
        }
        p.setSelectionValues(ln.toArray());
        p.setInitialSelectionValue(ln.get(0));
        //System.out.println(p.createDialog("Chocie").);
        choices = ln.toArray(new String[0]);
        String b = (String) JOptionPane.showInputDialog(this, "Select an ending location from below",
                "List of locations", JOptionPane.QUESTION_MESSAGE, null, // Use
                // default
                // icon
                choices, // Array of choices
                choices[0]);
        cv.SetShortestDistanceBetween(a, b);
        
    }//GEN-LAST:event_menuItemFindShortestRouteBetweenMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu menuExit;
    private javax.swing.JMenuItem menuItemFindShortestRouteBetween;
    private javax.swing.JMenuItem menuItemHighlightNearestLocations;
    private javax.swing.JMenuItem menuItemRegenerateMap;
    private javax.swing.JMenuItem menuItemRegenerateMapWithNCooridinates;
    private javax.swing.JMenu menuLocations;
    private javax.swing.JMenu menuMap;
    // End of variables declaration//GEN-END:variables
}
